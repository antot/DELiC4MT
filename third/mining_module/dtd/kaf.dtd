<!ELEMENT KAF (kafHeader|text|terms|deps|chunks|events|quantifiers|timexs)*>

<!ATTLIST KAF
	  doc CDATA #IMPLIED
	  xml:lang CDATA #IMPLIED>

<!ELEMENT kafHeader (fileDesc?,public?,linguisticProcessors*)>

<!--

<fileDesc> is an empty element containing information about the
computer document itself. It has the following attributes:

- title: the title of the document (optional).
- author: the author of the document (optional).
- filename: the original file name (optional).
- filetype: the original format (PDF, HTML, DOC, etc) (optional).
- pages: number of pages of the original document (optional).

-->

<!ELEMENT fileDesc EMPTY>
<!ATTLIST fileDesc
          title CDATA #IMPLIED
          author CDATA #IMPLIED
          filename CDATA #IMPLIED
          filetype CDATA #IMPLIED
          pages CDATA #IMPLIED>

<!-- 

<public> is an empty element which stores public information about
the document, such as its URI. It has the following attributes:

- publicId: a public identifier (for instance, the number
- inserted by the capture server) (optional).
- uri: a public URI of the document (optional).

-->

<!ELEMENT public EMPTY>
<!ATTLIST public
          publicId CDATA #IMPLIED
          uri CDATA #IMPLIED>

<!--  

<linguisticProcessors> elements store the information about which linguistic processors
produced the KAF document. There can be several <linguisticProcessors> elements, one
per KAF layer. KAF layers correspond to the top-level elements of the
documents, such as "text", "terms", "deps" etc.

-->

<!ELEMENT linguisticProcessors (lp)+>
<!ATTLIST linguisticProcessors
          layer CDATA #REQUIRED>

<!-- 

<lp> elements describe one specific linguistic processor. <lp> elements 
have the following attributes:

- name: the name of the processor
- version: processor's version
- timestamp: a timestamp, denoting the date/time at which the processor was
  launched. The timestamp follows the XML Schema xs:dateTime type (See
  http://www.w3.org/TR/xmlschema-2/#isoformats). In summary, the date is
  specified following the form "YYYY-MM-DDThh:mm:ss" (all fields
  required). To specify a time zone, you can either enter a dateTime in UTC
  time by adding a "Z" behind the time ("2002-05-30T09:00:00Z") or you can
  specify an offset from the UTC time by adding a positive or negative time
  behind the time ("2002-05-30T09:00:00+06:00").
-->

<!ELEMENT lp EMPTY>
<!ATTLIST lp
          name CDATA #REQUIRED
          version CDATA #REQUIRED
          timestamp CDATA #REQUIRED>



<!ELEMENT text (wf)+>
<!ELEMENT wf (#PCDATA)>
<!ATTLIST wf
	  wid ID #REQUIRED
	  sent CDATA #IMPLIED
	  para CDATA #IMPLIED
	  page CDATA #IMPLIED
	  xpath CDATA #IMPLIED>

<!ELEMENT terms (term)+>
<!ELEMENT term (span|externalReferences|component)+>

<!--
    attributes of term elements

    tid: unique identifier

    type: type of the term. Currently, 3 values are possible:
       open: open category term
       close: close category term
       entity: term is a named entity

    lemma: lemma of the term

    pos: part of speech. The first letter of the pos attribute
          must be one of the following:

	  N	common noun
	  R	proper noun
	  G	adjective
	  V	verb
	  P	preposition
	  A	adverb
	  C	conjunction
	  D	determiner
	  O	other

	  more complex pos attributes may be formed by concatenating values separated
	  by a dot ".". For example, in Basque we have "V.ADI.SIN" for simple verbs
	  or "V.ADI.KON" for complex verbs.

    netype: if the term is a named entity (type="entity"), the type of the entity.

    case: declension case of the term

    head: if the term is a compound, the id of the head component
-->

<!ATTLIST term
	  tid ID #REQUIRED
	  type CDATA #REQUIRED
	  lemma CDATA #REQUIRED
	  pos CDATA #REQUIRED
	  netype CDATA #IMPLIED
	  case CDATA #IMPLIED
	  head CDATA #IMPLIED>

<!ELEMENT span (target)+>
<!ELEMENT target EMPTY>
<!ATTLIST target
	  id IDREF #REQUIRED>

<!--

The <externalReferences> element is used to associate terms to
external resources, such as elements of a Knowledge base, an ontology,
etc. It consists of several <externalRef> elements, one per
association.

-->

<!ELEMENT externalReferences (externalRef)+>

<!-- 

<externalRef> elements have the following attributes:
- resource: indicates the identifier of the resource referred to. 
- reference: code of the referred element. If the element is a
  synset of some version of WordNet, it follows the pattern:

    [a-z]{3}-[0-9]{2}-[0-9]+-[nvars]

  which is a string composed by four fields separated by a dash. 
  The four fields are the following:


  - Language code (three characters).
  - WordNet version (two digits).
  - Synset identifier composed by digits.
  - POS character:
    n noun
    v verb
    a adjective
    r adverb
  examples of valid patterns are: ``ENG-20-12345678-n'', 
  ``SPA-16-017403-v'', etc.

-->

<!ELEMENT externalRef EMPTY>
<!ATTLIST externalRef
          resource CDATA #REQUIRED
          reference CDATA #REQUIRED
	  confidence CDATA #IMPLIED>

<!ELEMENT component (externalReferences)*>
<!ATTLIST component
	  id ID #REQUIRED
	  lemma CDATA #REQUIRED
	  pos CDATA #REQUIRED
	  case CDATA #IMPLIED>

<!ELEMENT deps (dep)+>
<!ELEMENT dep EMPTY>


<!--

Possible values of rfunc attribute (relational function)

* mod: indicates the word introducing the dependent in a head- modifier
       relation.
  Ex:
    mod(by,gift,Peter) the gift of a book by Peter
    mod(of,examination,patient) the examination of the patient

* subj: indicates the subject in the grammatical relation Subject-Predicate.

  Ex:
    subj(arrive,John,_) John arrived in Paris
    subj(employ,Microsoft,_) Microsoft employed 10 C programmers
    subj(employ,Paul,obj) Paul was employed by Microsoft

* csubj, xsubj, ncsubj: The Grammatical Realtions (RL) s csubj and xsubj may
                        be used for clausal subjects, controlled from
                        within, or without, respectively. ncsubj is a
                        non-clausal subject.

  Ex:
    xsubj(win,require,_) to win the America's Cup requires heaps of cash

* dobj: Indicates the object in the grammatical relation between a predicate
        and its direct object.

  Ex:
    dobj(read,book,_) read books

* iobj: The relation between a predicate and a non-clausal complement
        introduced by a preposition; type indicates the preposition
        introducing the dependent.

  Ex:
    iobj(in,arrive,Spain) arrive in Spain
    iobj(into,put,box) put the tools into the box
    iobj(to,give,poor) give to the poor

* obj2: The relation between a predicate and the second non-clausal
        complement in ditransitive constructions.

  Ex:
    obj2(head,dependent)
    obj2(give,present) give Mary a present
    obj2(mail,contract) mail Paul the contract

-->

<!ATTLIST dep
	  from IDREF #REQUIRED
	  to IDREF #REQUIRED
	  rfunc CDATA #REQUIRED
          case CDATA #IMPLIED>

<!ELEMENT chunks (chunk)+>
<!ELEMENT chunk (span)+>
<!ATTLIST chunk
	  cid ID #REQUIRED
	  head IDREF #REQUIRED
	  phrase CDATA #IMPLIED
	  case CDATA #IMPLIED>

<!ELEMENT events (event)+>

<!ELEMENT event (roles)+>
<!ATTLIST event
	  eid ID #REQUIRED
	  span IDREF #REQUIRED
	  lemma CDATA #REQUIRED
	  pos CDATA #REQUIRED
	  eiid CDATA #IMPLIED
	  class CDATA #IMPLIED
	  tense CDATA #IMPLIED
	  aspect CDATA #IMPLIED
	  polarity CDATA #IMPLIED>

<!ELEMENT roles (role)+>
<!ELEMENT role EMPTY>
<!ATTLIST role
	  cid IDREF #REQUIRED
	  role CDATA #REQUIRED>

<!ELEMENT quantifiers (quantifier)+>
<!ELEMENT quantifier (span)+>
<!ATTLIST quantifier
	  qid ID #REQUIRED>

<!ELEMENT timexs (timex3|tlink)+>
<!ELEMENT timex3 (span)+>
<!ATTLIST timex3
	  texid ID #REQUIRED
	  type CDATA #REQUIRED
	  value CDATA #IMPLIED
	  quant CDATA #IMPLIED>

<!ELEMENT tlink EMPTY>
<!ATTLIST tlink
	  timeId IDREF #REQUIRED
	  relatedToTime IDREF #REQUIRED
	  relType CDATA #REQUIRED>
